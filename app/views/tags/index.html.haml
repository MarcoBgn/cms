.l-panel-content.l-panel-content--form
  .l-constrained

    -# header
    .page-header
      %h2= t('.title')

    -# create new tags
    .js-tags-creation
      = form_for(Tag.new, remote: true, method: :post) do |form|
        = form.hidden_field :value, class: 'js-tags-add-value'
        = form.submit class: 'js-tags-add-submit', hidden: true
      %label= t('.add_tag.info')
      .js-tags-display

    -# delete tags
    .js-tags-deletion
      = form_for(:tag, url: delete_from_value_tags_path, remote: true, method: :delete) do |form|
        = form.hidden_field :value, class: 'js-tags-delete-value'
        = form.submit class: 'js-tags-delete-submit', hidden: true

    -# existing tags
    .js-tags-listing
      %label= t('.existing.info')
      %div!= index_of_existing_tags
      .js-tags-existing



- content_for :javascript do
  :javascript

    // set 'active' class to selected letter tags link when clicking.
    $('.js-tags-starting-by-link').click(function() {
      $('.js-tags-existing .tag').removeClass('active');
      $(this).addClass("active");
    });

    // update the list of tags starting by <prefix> if needed.
    function maybeUpdateDisplayedTagList(prefix) {
      if (displayedTagsPrefix() == prefix) {
        displayTagList(prefix);
      }
    }

    // returns the prefix (letter) of the currently displayed tag list
    function displayedTagsPrefix() {
      var active_link = $('.js-tags-starting-by-link.active');
      if (active_link) {
        return active_link.attr('data-prefix');
      }
    }

    // render the list of tags starting by the given prefix (letter)
    function displayTagList(prefix) {
      $(".js-tags-starting-by-link[data-prefix*='" + prefix + "']")[0].click();
    }

    // inits the tag box
    require(['taggle'], function(Taggle) {
      new Taggle(document.querySelector('.js-tags-display'), {
        placeholder: '',
        onTagAdd: function(event, tag) {
          $('.js-tags-add-value').val(tag);
          $('.js-tags-add-submit').click();
          maybeUpdateDisplayedTagList(tag[0]);
        },
        onTagRemove: function(event, tag) {
          $('.js-tags-delete-value').val(tag);
          $('.js-tags-delete-submit').click();
          maybeUpdateDisplayedTagList(tag[0]);
        }
      });
    });
